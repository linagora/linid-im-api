name: Release
on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Import GPG Key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --no-tty --import
          echo "no-tty" >> ~/.gnupg/gpg.conf
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Release new version
        run: mvn -ntp io.github.zorin95670:semantic-version:0.4.3:release

      - name: Build and publish to Maven Central
        run: mvn clean deploy -DskipTests -s .github/maven-settings.xml
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSWORD }}

      - name: Push new tag and release commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/linagora/linid-im-api.git
          git push origin main
          git push origin --tags


  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Execute unit tests
        run: mvn -ntp -Dgpg.skip=true clean verify

      - name: Execute sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -ntp sonar:sonar -Dsonar.token=$SONAR_TOKEN -Dsonar.branch.name=${{ github.head_ref }}

  github-release:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags | head -n1)
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Extract changelog for this tag
        id: extract_changelog
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          TAG_NO_V="${TAG#v}"
          TAG_ESCAPED=$(printf '%s\n' "$TAG_NO_V" | sed 's/[][(){}.^$*+?\\/]/\\&/g')
          awk -v tag="$TAG_ESCAPED" '
            $0 ~ "^## \\[" tag "\\]" {in_block=1}
            in_block {
            if ($0 ~ /^## \[[^]]+\]/ && $0 !~ ("^## \\[" tag "\\]")) exit
            print
          }
          ' changelog.md > RELEASE_BODY.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body_path: RELEASE_BODY.md
          draft: false
          prerelease: false